$disabledColor: #a7a7a7 !default;
$themeColor: #151515 !default;
$themeColorSilent: lighten($themeColor, 10%) !default;
$themeColorActive: darken($themeColor, 10%) !default;

$bgColor: #727578 !default;
$bgColorSilent: lighten($bgColor, 8%) !default;
$railBorderRadius: 15px !default;

$dotColor: #727578 !default;
$dotBgColor: #fff !default;
$dotColorFocus: $dotColor !default;
$dotColorHover: $dotColorFocus !default;
$dotColorDisabled: #ddd !default;
$dotShadowFocus: 0 0 0 1px rgba($themeColorActive, 0.2) !default;


$tooltipBgColor: #727578 !default;
$tooltipColor: #fff !default;
$tooltipShadow: 0 2px 3px rgba(0, 0, 0, 0.15) !default;
$tooltipBorderRadius: 0px !default;
$tooltipPadding: 2px 6px !default;
$tooltipArrow: 10px !default;
$tooltipFontSize: 14px !default;

$stepColor: #727578 !default;
$stepBgColor: #fff !default;

$labelFontSize: 12px !default;


@mixin triangle($size, $color, $direction) {
    height: 0;
    width: 0;
    @if ($direction==top) or ($direction==bottom) or ($direction==right) or ($direction==left) {
      border-color: transparent;
      border-style: solid;
      border-width: $size * 0.5;
      @if $direction==top {
        border-bottom-color: $color;
      } @else if $direction==right {
        border-left-color: $color;
      } @else if $direction==bottom {
        border-top-color: $color;
      } @else if $direction==left {
        border-right-color: $color;
      }
    }
  }
  
  @mixin arrow($size, $color) {
    &::after {
      content: '';
      position: absolute;
    }
  
    &-top {
      &::after {
        top: 100%;
        left: 50%;
        transform: translate(-50%, 0);
        @include triangle($size, $color, bottom);
      }
    }
  
    &-bottom {
      &::after {
        bottom: 100%;
        left: 50%;
        transform: translate(-50%, 0);
        @include triangle($size, $color, top);
      }
    }
  
    &-left {
      &::after {
        left: 100%;
        top: 50%;
        transform: translate(0, -50%);
        @include triangle($size, $color, right);
      }
    }
  
    &-right {
      &::after {
        right: 100%;
        top: 50%;
        transform: translate(0, -50%);
        @include triangle($size, $color, left);
      }
    }
  }


  
  /* component style */
  .vue-slider-disabled {
    .vue-slider-process {
      background-color: $disabledColor;
    }
    .vue-slider-dot-handle {
      border-color: $disabledColor;
    }
    .vue-slider-mark-step {
      &-active {
        box-shadow: 0 0 0 2px $disabledColor;
      }
    }
  }
  
  /* rail style */
  .vue-slider-rail {
    background-color: $bgColorSilent;
    border-radius: $railBorderRadius;
    transition: background-color 0.3s;
    @at-root .vue-slider:hover & {
      background-color: $bgColor;
    }
  }
  
  /* process style */
  .vue-slider-process {
    background-color: $themeColorSilent;
    border-radius: $railBorderRadius;
    transition: background-color 0.3s;
    @at-root .vue-slider:hover & {
      background-color: $themeColor;
    }
  }
  
  /* mark style */
  .vue-slider-mark {
    @at-root &-step {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      box-shadow: 0 0 0 2px $stepColor;
      background-color: $stepBgColor;
  
      &-active {
        box-shadow: 0 0 0 2px $themeColorSilent;
        @at-root .vue-slider:hover & {
          box-shadow: 0 0 0 2px $themeColor;
        }
      }
    }
  
    @at-root &-label {
      font-size: $labelFontSize;
      white-space: nowrap;
      transform: translate(-50%, -200%) !important;

      &-active {
      }
    }
  }
  
  /* dot style */
  .vue-slider-dot {
    @at-root &-handle {
      cursor: pointer;
      width: 100%;
      height: 100%;
    //   border-radius: 50%;
      background-color: $dotBgColor;
      border: 2px solid $dotColor;
      box-sizing: border-box;
      transition: box-shadow 0.3s, border-color 0.3s;
  
      @at-root .vue-slider:hover & {
        border-color: $themeColor;
      }
      @at-root &-focus {
        border-color: $dotColorFocus;
        box-shadow: $dotShadowFocus;
        @at-root .vue-slider:hover & {
          border-color: $dotColorFocus;
        }
      }
      @at-root &:hover {
        border-color: $dotColorHover;
        @at-root .vue-slider:hover & {
          border-color: $dotColorHover;
        }
      }
      @at-root &-disabled {
        cursor: not-allowed;
        border-color: $dotColorDisabled !important;
      }
    }
  
    @at-root &-tooltip {
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s;
  
      @at-root &-inner {
        font-size: $tooltipFontSize;
        white-space: nowrap;
        padding: $tooltipPadding;
        color: $tooltipColor;
        border-radius: $tooltipBorderRadius;
        border-color: $tooltipBgColor;
        background-color: $tooltipBgColor;
        box-shadow: $tooltipShadow;
        @include arrow($tooltipArrow, inherit);
  
        transform: scale(0.9);
        transition: transform 0.3s;
        &-top {
          transform-origin: 50% 100%;
        }
        &-bottom {
          transform-origin: 50% 0;
        }
        &-left {
          transform-origin: 100% 50%;
        }
        &-right {
          transform-origin: 0% 50%;
        }
      }
  
      @at-root .vue-slider-dot:hover &,
        &-show {
        opacity: 1;
        visibility: visible;
        .vue-slider-dot-tooltip-inner {
          transform: scale(1);
        }
      }
    }
  }